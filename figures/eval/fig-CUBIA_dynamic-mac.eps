%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./fig-CUBIC_dynamic-mac.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Sun Jul 28 19:32:55 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./fig-CUBIC_dynamic-mac.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (owner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jul 28 19:32:55 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Arial) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1.000 UL
LT2
980 640 M
5859 0 V
stroke
LTb
980 640 M
63 0 V
5796 0 R
-63 0 V
stroke
860 640 M
[ [(Arial) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
980 1195 M
5859 0 V
stroke
LTb
980 1195 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1195 M
[ [(Arial) 240.0 0.0 true true 0 ( 0.2)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
980 1749 M
5859 0 V
stroke
LTb
980 1749 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1749 M
[ [(Arial) 240.0 0.0 true true 0 ( 0.4)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
980 2304 M
5859 0 V
stroke
LTb
980 2304 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2304 M
[ [(Arial) 240.0 0.0 true true 0 ( 0.6)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
980 2858 M
5859 0 V
stroke
LTb
980 2858 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2858 M
[ [(Arial) 240.0 0.0 true true 0 ( 0.8)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
980 3413 M
5859 0 V
stroke
LTb
980 3413 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3413 M
[ [(Arial) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
980 3967 M
5859 0 V
stroke
LTb
980 3967 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3967 M
[ [(Arial) 240.0 0.0 true true 0 ( 1.2)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
980 4522 M
120 0 V
1218 0 R
4521 0 V
stroke
LTb
980 4522 M
63 0 V
5796 0 R
-63 0 V
stroke
860 4522 M
[ [(Arial) 240.0 0.0 true true 0 ( 1.4)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
980 640 M
0 4159 V
stroke
LTb
980 640 M
0 -63 V
0 63 R
0 63 V
stroke
980 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 2.7)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
1712 640 M
0 3388 V
0 708 R
0 63 V
stroke
LTb
1712 640 M
0 -63 V
0 63 R
0 63 V
stroke
1712 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 2.8)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
2445 640 M
0 4159 V
stroke
LTb
2445 640 M
0 -63 V
0 63 R
0 63 V
stroke
2445 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 2.9)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
3177 640 M
0 4159 V
stroke
LTb
3177 640 M
0 -63 V
0 63 R
0 63 V
stroke
3177 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 3)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
3910 640 M
0 4159 V
stroke
LTb
3910 640 M
0 -63 V
0 63 R
0 63 V
stroke
3910 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 3.1)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
4642 640 M
0 4159 V
stroke
LTb
4642 640 M
0 -63 V
0 63 R
0 63 V
stroke
4642 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 3.2)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
5374 640 M
0 4159 V
stroke
LTb
5374 640 M
0 -63 V
0 63 R
0 63 V
stroke
5374 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 3.3)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
6107 640 M
0 4159 V
stroke
LTb
6107 640 M
0 -63 V
0 63 R
0 63 V
stroke
6107 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 3.4)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
6839 640 M
0 4159 V
stroke
LTb
6839 640 M
0 -63 V
0 63 R
0 63 V
stroke
6839 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 3.5)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
980 4799 N
980 640 L
5859 0 V
0 4159 V
-5859 0 V
Z stroke
LCb setrgbcolor
160 2719 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Arial) 260.0 0.0 true true 0 (c)]
[(Arial) 208.0 -78.0 true true 0 (k)]
] -60.7 MCshow
grestore
LTb
LCb setrgbcolor
3909 140 M
[ [(Arial) 260.0 0.0 true true 0 (Time \(sec\))]
] -86.7 MCshow
LTb
2.000 UP
2445 2581 M
[ [(Arial) 200.0 0.0 true true 0 (40 nodes start Tx at 3 sec)]
] -66.7 MLshow
1.000 UL
LTb
3106 1298 M
71 -103 V
-9 125 V
2738 2442 M
3177 1195 L
stroke
gsave [] 0 setdash
3106 1298 M
71 -103 V
-9 125 V
stroke
grestore
1.000 UL
LTb
% Begin plot #1
2.000 UP
4.000 UL
LT1
LCb setrgbcolor
1946 4618 M
[ [(Arial) 200.0 0.0 true true 0 (AP)]
[(Arial) 160.0 -60.0 true true 0 (1)]
[(Arial) 200.0 0.0 true true 0 ( )]
] -46.7 MLshow
LT1
1220 4618 M
606 0 V
980 640 M
107 0 V
128 0 V
125 80 V
75 -80 V
159 0 V
175 272 V
1882 640 L
153 241 V
610 386 V
2781 640 L
135 0 V
196 0 V
257 435 V
3483 640 L
141 0 V
164 0 V
183 122 V
4109 640 L
572 294 V
4814 640 L
190 0 V
182 0 V
161 0 V
95 0 V
177 263 V
329 131 V
6070 640 L
142 158 V
6351 640 L
118 0 V
139 219 V
6755 676 L
84 -22 V
1087 640 Crs
1215 640 Crs
1340 720 Crs
1415 640 Crs
1574 640 Crs
1749 912 Crs
1882 640 Crs
2035 881 Crs
2645 1267 Crs
2781 640 Crs
2916 640 Crs
3112 640 Crs
3369 1075 Crs
3483 640 Crs
3624 640 Crs
3788 640 Crs
3971 762 Crs
4109 640 Crs
4681 934 Crs
4814 640 Crs
5004 640 Crs
5186 640 Crs
5347 640 Crs
5442 640 Crs
5619 903 Crs
5948 1034 Crs
6070 640 Crs
6212 798 Crs
6351 640 Crs
6469 640 Crs
6608 859 Crs
6755 676 Crs
1523 4618 Crs
% End plot #1
% Begin plot #2
2.000 UP
4.000 UL
LT3
LCb setrgbcolor
1946 4382 M
[ [(Arial) 200.0 0.0 true true 0 (AP)]
[(Arial) 160.0 -60.0 true true 0 (2)]
[(Arial) 200.0 0.0 true true 0 ( )]
] -46.7 MLshow
LT3
1220 4382 M
606 0 V
980 724 M
590 105 V
1701 640 L
74 0 V
158 0 V
93 0 V
140 0 V
184 0 V
122 0 V
184 0 V
123 0 V
135 0 V
155 0 V
114 0 V
347 469 V
269 560 V
4010 640 L
106 0 V
154 0 V
402 668 V
4859 640 L
160 0 V
241 452 V
5410 804 L
5548 640 L
130 0 V
164 0 V
997 733 V
1570 829 Box
1701 640 Box
1775 640 Box
1933 640 Box
2026 640 Box
2166 640 Box
2350 640 Box
2472 640 Box
2656 640 Box
2779 640 Box
2914 640 Box
3069 640 Box
3183 640 Box
3530 1109 Box
3799 1669 Box
4010 640 Box
4116 640 Box
4270 640 Box
4672 1308 Box
4859 640 Box
5019 640 Box
5260 1092 Box
5410 804 Box
5548 640 Box
5678 640 Box
5842 640 Box
1523 4382 Box
% End plot #2
% Begin plot #3
2.000 UP
4.000 UL
LT6
LCb setrgbcolor
1946 4146 M
[ [(Arial) 200.0 0.0 true true 0 (AP)]
[(Arial) 160.0 -60.0 true true 0 (3)]
[(Arial) 200.0 0.0 true true 0 ( )]
] -46.7 MLshow
LT6
1220 4146 M
606 0 V
980 640 M
81 0 V
160 116 V
1336 640 L
144 0 V
181 0 V
169 0 V
146 0 V
155 0 V
156 0 V
97 0 V
252 255 V
2760 640 L
178 0 V
144 0 V
368 477 V
3607 848 L
186 8 V
3960 640 L
302 230 V
4449 640 L
143 0 V
174 0 V
282 272 V
5201 640 L
284 449 V
294 -11 V
5957 640 L
121 0 V
110 0 V
144 0 V
142 0 V
182 222 V
75 -222 V
108 0 V
1061 640 CircleF
1221 756 CircleF
1336 640 CircleF
1480 640 CircleF
1661 640 CircleF
1830 640 CircleF
1976 640 CircleF
2131 640 CircleF
2287 640 CircleF
2384 640 CircleF
2636 895 CircleF
2760 640 CircleF
2938 640 CircleF
3082 640 CircleF
3450 1117 CircleF
3607 848 CircleF
3793 856 CircleF
3960 640 CircleF
4262 870 CircleF
4449 640 CircleF
4592 640 CircleF
4766 640 CircleF
5048 912 CircleF
5201 640 CircleF
5485 1089 CircleF
5779 1078 CircleF
5957 640 CircleF
6078 640 CircleF
6188 640 CircleF
6332 640 CircleF
6474 640 CircleF
6656 862 CircleF
6731 640 CircleF
1523 4146 CircleF
% End plot #3
1.000 UL
LTb
980 4799 N
980 640 L
5859 0 V
0 4159 V
-5859 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
 %%Trailer
%%DocumentFonts: Arial
