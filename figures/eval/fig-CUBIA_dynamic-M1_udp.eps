%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./FIG_tflow_M1_udp.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Sun Jul 28 19:15:56 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./FIG_tflow_M1_udp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (owner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jul 28 19:15:56 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Arial) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1.000 UL
LT2
740 640 M
6099 0 V
stroke
LTb
740 640 M
63 0 V
6036 0 R
-63 0 V
stroke
620 640 M
[ [(Arial) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
740 1396 M
6099 0 V
stroke
LTb
740 1396 M
63 0 V
6036 0 R
-63 0 V
stroke
620 1396 M
[ [(Arial) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
740 2152 M
6099 0 V
stroke
LTb
740 2152 M
63 0 V
6036 0 R
-63 0 V
stroke
620 2152 M
[ [(Arial) 240.0 0.0 true true 0 ( 2)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
740 2909 M
6099 0 V
stroke
LTb
740 2909 M
63 0 V
6036 0 R
-63 0 V
stroke
620 2909 M
[ [(Arial) 240.0 0.0 true true 0 ( 3)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
740 3665 M
6099 0 V
stroke
LTb
740 3665 M
63 0 V
6036 0 R
-63 0 V
stroke
620 3665 M
[ [(Arial) 240.0 0.0 true true 0 ( 4)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
740 4421 M
120 0 V
1218 0 R
4761 0 V
stroke
LTb
740 4421 M
63 0 V
6036 0 R
-63 0 V
stroke
620 4421 M
[ [(Arial) 240.0 0.0 true true 0 ( 5)]
] -80.0 MRshow
1.000 UL
LTb
1.000 UL
LT2
740 640 M
0 4159 V
stroke
LTb
740 640 M
0 -63 V
0 63 R
0 63 V
stroke
740 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 4.8)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
1960 640 M
0 3388 V
0 708 R
0 63 V
stroke
LTb
1960 640 M
0 -63 V
0 63 R
0 63 V
stroke
1960 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 4.9)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
3180 640 M
0 4159 V
stroke
LTb
3180 640 M
0 -63 V
0 63 R
0 63 V
stroke
3180 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 5)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
4399 640 M
0 4159 V
stroke
LTb
4399 640 M
0 -63 V
0 63 R
0 63 V
stroke
4399 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 5.1)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
5619 640 M
0 4159 V
stroke
LTb
5619 640 M
0 -63 V
0 63 R
0 63 V
stroke
5619 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 5.2)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LT2
6839 640 M
0 4159 V
stroke
LTb
6839 640 M
0 -63 V
0 63 R
0 63 V
stroke
6839 440 M
[ [(Arial) 240.0 0.0 true true 0 ( 5.3)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
740 4799 N
740 640 L
6099 0 V
0 4159 V
-6099 0 V
Z stroke
LCb setrgbcolor
160 2719 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Arial) 260.0 0.0 true true 0 (c)]
[(Arial) 208.0 -78.0 true true 0 (k)]
] -60.7 MCshow
grestore
LTb
LCb setrgbcolor
3789 140 M
[ [(Arial) 260.0 0.0 true true 0 (Time \(sec\))]
] -86.7 MCshow
LTb
2.000 UP
1350 2001 M
[ [(Arial) 200.0 0.0 true true 0 (Selfish tethering)]
] -66.7 MLshow
1350 1801 M
[ [(Arial) 200.0 0.0 true true 0 (start Tx at 5sec)]
] -66.7 MLshow
2570 2719 M
[ [(Arial) 200.0 0.0 true true 0 (First Alarm)]
] -66.7 MLshow
2570 2519 M
[ [(Arial) 200.0 0.0 true true 0 (\()]
[(Symbol) 200.0 0.0 true true 0 (q)]
[(Arial) 160.0 -60.0 true true 0 (AS)]
[(Arial) 200.0 0.0 true true 0 (=2)]
[(Arial) 200.0 0.0 true true 0 (\))]
] -46.7 MLshow
3302 4239 M
[ [(Arial) 200.0 0.0 true true 0 (Second Alarm)]
] -66.7 MLshow
3302 4039 M
[ [(Arial) 200.0 0.0 true true 0 (\()]
[(Symbol) 200.0 0.0 true true 0 (q)]
[(Arial) 160.0 -60.0 true true 0 (S)]
[(Arial) 200.0 0.0 true true 0 (=5)]
[(Arial) 200.0 0.0 true true 0 (\))]
] -46.7 MLshow
1.000 UL
LTb
3067 921 M
113 -54 V
-71 103 V
-905 729 R
3180 867 L
stroke
gsave [] 0 setdash
3067 921 M
113 -54 V
-71 103 V
stroke
grestore
1.000 UL
LTb
3913 2188 M
120 -36 V
-86 91 V
-645 363 R
731 -454 V
stroke
gsave [] 0 setdash
3913 2188 M
120 -36 V
-86 91 V
stroke
grestore
1.000 UL
LTb
4911 4365 M
98 56 V
-113 0 V
-253 -98 R
366 98 V
stroke
gsave [] 0 setdash
4911 4365 M
98 56 V
-113 0 V
stroke
grestore
1.000 UL
LTb
% Begin plot #1
2.000 UP
4.000 UL
LT1
LCb setrgbcolor
1706 4618 M
[ [(Arial) 200.0 0.0 true true 0 (AP)]
[(Arial) 160.0 -60.0 true true 0 (1)]
[(Arial) 200.0 0.0 true true 0 ( )]
] -46.7 MLshow
LT1
980 4618 M
606 0 V
740 640 M
36 0 V
52 0 V
47 0 V
52 0 V
48 0 V
53 0 V
48 0 V
43 0 V
53 0 V
45 0 V
43 0 V
58 0 V
42 0 V
65 0 V
46 0 V
57 0 V
54 0 V
45 0 V
52 0 V
49 0 V
53 0 V
54 0 V
52 0 V
54 0 V
51 0 V
52 0 V
52 0 V
55 0 V
45 0 V
46 0 V
45 0 V
60 0 V
52 0 V
57 0 V
76 0 V
48 0 V
43 0 V
56 0 V
48 0 V
45 0 V
58 0 V
54 0 V
59 0 V
70 0 V
45 0 V
57 0 V
49 0 V
60 76 V
88 151 V
200 529 V
679 378 V
80 76 V
173 302 V
91 303 V
154 227 V
277 453 V
312 303 V
206 227 V
134 378 V
125 151 V
83 151 V
102 152 V
776 640 Crs
828 640 Crs
875 640 Crs
927 640 Crs
975 640 Crs
1028 640 Crs
1076 640 Crs
1119 640 Crs
1172 640 Crs
1217 640 Crs
1260 640 Crs
1318 640 Crs
1360 640 Crs
1425 640 Crs
1471 640 Crs
1528 640 Crs
1582 640 Crs
1627 640 Crs
1679 640 Crs
1728 640 Crs
1781 640 Crs
1835 640 Crs
1887 640 Crs
1941 640 Crs
1992 640 Crs
2044 640 Crs
2096 640 Crs
2151 640 Crs
2196 640 Crs
2242 640 Crs
2287 640 Crs
2347 640 Crs
2399 640 Crs
2456 640 Crs
2532 640 Crs
2580 640 Crs
2623 640 Crs
2679 640 Crs
2727 640 Crs
2772 640 Crs
2830 640 Crs
2884 640 Crs
2943 640 Crs
3013 640 Crs
3058 640 Crs
3115 640 Crs
3164 640 Crs
3224 716 Crs
3312 867 Crs
3512 1396 Crs
4191 1774 Crs
4271 1850 Crs
4444 2152 Crs
4535 2455 Crs
4689 2682 Crs
4966 3135 Crs
5278 3438 Crs
5484 3665 Crs
5618 4043 Crs
5743 4194 Crs
5826 4345 Crs
5928 4497 Crs
1283 4618 Crs
% End plot #1
% Begin plot #2
2.000 UP
4.000 UL
LT3
LCb setrgbcolor
1706 4382 M
[ [(Arial) 200.0 0.0 true true 0 (AP)]
[(Arial) 160.0 -60.0 true true 0 (2)]
[(Arial) 200.0 0.0 true true 0 ( )]
] -46.7 MLshow
LT3
980 4382 M
606 0 V
740 640 M
78 0 V
565 0 V
472 0 V
449 0 V
204 0 V
367 0 V
191 0 V
281 151 V
114 76 V
105 227 V
126 302 V
121 227 V
104 227 V
81 151 V
369 378 V
184 227 V
209 378 V
177 378 V
165 303 V
270 227 V
343 302 V
435 303 V
818 640 Box
1383 640 Box
1855 640 Box
2304 640 Box
2508 640 Box
2875 640 Box
3066 640 Box
3347 791 Box
3461 867 Box
3566 1094 Box
3692 1396 Box
3813 1623 Box
3917 1850 Box
3998 2001 Box
4367 2379 Box
4551 2606 Box
4760 2984 Box
4937 3362 Box
5102 3665 Box
5372 3892 Box
5715 4194 Box
6150 4497 Box
1283 4382 Box
% End plot #2
% Begin plot #3
2.000 UP
4.000 UL
LT4
LCb setrgbcolor
1706 4146 M
[ [(Arial) 200.0 0.0 true true 0 (AP)]
[(Arial) 160.0 -60.0 true true 0 (3)]
[(Arial) 200.0 0.0 true true 0 ( )]
] -46.7 MLshow
LT4
980 4146 M
606 0 V
740 640 M
40 0 V
62 0 V
48 0 V
53 0 V
43 0 V
43 0 V
47 0 V
45 0 V
50 0 V
53 0 V
43 0 V
58 0 V
53 0 V
53 0 V
46 0 V
57 0 V
55 0 V
52 0 V
52 0 V
47 0 V
50 0 V
57 0 V
45 0 V
54 0 V
61 0 V
53 0 V
58 0 V
46 0 V
52 0 V
50 0 V
56 0 V
56 0 V
63 0 V
48 0 V
84 0 V
49 0 V
40 0 V
56 0 V
46 0 V
58 0 V
43 0 V
63 0 V
68 0 V
54 0 V
62 0 V
47 0 V
58 0 V
90 151 V
205 530 V
174 151 V
335 529 V
134 151 V
153 303 V
117 151 V
216 378 V
145 303 V
117 226 V
126 379 V
156 302 V
103 227 V
780 640 BoxF
842 640 BoxF
890 640 BoxF
943 640 BoxF
986 640 BoxF
1029 640 BoxF
1076 640 BoxF
1121 640 BoxF
1171 640 BoxF
1224 640 BoxF
1267 640 BoxF
1325 640 BoxF
1378 640 BoxF
1431 640 BoxF
1477 640 BoxF
1534 640 BoxF
1589 640 BoxF
1641 640 BoxF
1693 640 BoxF
1740 640 BoxF
1790 640 BoxF
1847 640 BoxF
1892 640 BoxF
1946 640 BoxF
2007 640 BoxF
2060 640 BoxF
2118 640 BoxF
2164 640 BoxF
2216 640 BoxF
2266 640 BoxF
2322 640 BoxF
2378 640 BoxF
2441 640 BoxF
2489 640 BoxF
2573 640 BoxF
2622 640 BoxF
2662 640 BoxF
2718 640 BoxF
2764 640 BoxF
2822 640 BoxF
2865 640 BoxF
2928 640 BoxF
2996 640 BoxF
3050 640 BoxF
3112 640 BoxF
3159 640 BoxF
3217 640 BoxF
3307 791 BoxF
3512 1321 BoxF
3686 1472 BoxF
4021 2001 BoxF
4155 2152 BoxF
4308 2455 BoxF
4425 2606 BoxF
4641 2984 BoxF
4786 3287 BoxF
4903 3513 BoxF
5029 3892 BoxF
5185 4194 BoxF
5288 4421 BoxF
1283 4146 BoxF
% End plot #3
1.000 UL
LTb
740 4799 N
740 640 L
6099 0 V
0 4159 V
-6099 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%Trailer
%%DocumentFonts: Symbol Arial
